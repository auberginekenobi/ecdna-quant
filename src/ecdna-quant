#!/bin/bash

set -e

CONFIG=$1
if [ ! -f "$CONFIG" ]; then
	exit 'File "$CONFIG" does not exist'
fi 

source $CONFIG

HERE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

mkdir -p $TMP_DIR
RANDOM_REGIONS=$tmp/permutations.bed

## Decompress 10X frag file and sort by barcode
echo "subset-fragments on sample $SAMPLE"
echo "Decompressing and sorting by barcode..."
INT_FILE=$TMP_DIR/${SAMPLE}_atac_fragments.bed
zcat $FRAG_FILE | tail -n +52 | sort -k4,4 -k1,1 -k2,2n > $INT_FILE

echo "Subsetting bed file..."

python3 $HERE/subset-fragments.py $INT_FILE $SAMPLE $BARCODES_FILE

rm $INT_FILE

## Generate random permutations
echo "Generating random permutations..."

N_ITER=1000
RANDOM_REGIONS=$TMP_DIR/permutations.bed
bedtools random -n $N_ITER -l 1000000 -g $BEDTOOLS_GENOME_FILE \
	| bedtools shuffle -g $BEDTOOLS_GENOME_FILE -excl $EXCLUDE_BED > \
        $RANDOM_REGIONS

## Count
mkdir -p $OUTPUT_DIR

arraylength=${#ECDNA_BED[@]}
COUNTS_FILES=()
ECDNA_LENGTHS=()
for (( i=0; i<${arraylength}; i++ )); do
	BED=${ECDNA_BED[$i]}
	echo "Counting ecDNA $(basename $BED) ..."
	COUNTS=$OUTPUT_DIR/${SAMPLE}_ecDNA${i}.tsv
	python3 $HERE/count-fragments.py --COLLAPSE_TARGET $BED $SAMPLE $COUNTS
	COUNTS_FILES+=($COUNTS)
	ECDNA_LENGTHS+=" $(python3 $HERE/bed-length.py $BED)"

done
echo "Counting backgrounds ..."
BG_COUNTS=$OUTPUT_DIR/${SAMPLE}_bkgd.tsv
python3 $HERE/count-fragments.py $RANDOM_REGIONS $SAMPLE $BG_COUNTS

for value in "${ECDNA_LENGTHS[@]}"; do
	echo "beep"
	echo $value
done

## Statistics
python3 $HERE/permutation-test.py  --ecdna_counts $COUNTS_FILES \
	 --bg_counts  $BG_COUNTS \
	--ecdna_lengths $ECDNA_LENGTHS \
	--out_dir $OUTPUT_DIR
echo "DONE"
